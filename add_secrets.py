#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è RAILWAY_TOKEN –≤ GitHub Secrets
"""

import os
import json
import base64
from cryptography.hazmat.primitives import serialization
from cryptography.hazmat.primitives.asymmetric import padding
from cryptography.hazmat.primitives import hashes
import requests

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
GITHUB_TOKEN = os.environ.get('GITHUB_TOKEN')
RAILWAY_TOKEN = "865b4851-d367-4c12-89dd-9d04ae397529"
REPO_OWNER = "Bogdan099"
REPO_NAME = "bogdan-release-tools"


def add_railway_secret():
    """–î–æ–±–∞–≤–ª—è–µ—Ç RAILWAY_TOKEN –≤ GitHub Secrets"""
    if not GITHUB_TOKEN:
        print("‚ùå GITHUB_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    headers = {
        "Authorization": f"token {GITHUB_TOKEN}",
        "Accept": "application/vnd.github.v3+json",
        "User-Agent": "Release-Automation-Bot"
    }
    
    try:
        # 1. –ü–æ–ª—É—á–∞–µ–º public key –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
        print("üîë –ü–æ–ª—É—á–∞—é public key...")
        key_url = f"https://api.github.com/repos/{REPO_OWNER}/{REPO_NAME}/actions/secrets/public-key"
        key_response = requests.get(key_url, headers=headers)
        key_response.raise_for_status()
        key_data = key_response.json()
        
        public_key = key_data["key"]
        key_id = key_data["key_id"]
        
        print(f"‚úÖ Public key –ø–æ–ª—É—á–µ–Ω: {key_id}")
        
        # 2. –®–∏—Ñ—Ä—É–µ–º RAILWAY_TOKEN
        print("üîí –®–∏—Ñ—Ä—É—é RAILWAY_TOKEN...")
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é cryptography
            from cryptography.hazmat.primitives.serialization import load_pem_public_key
            
            # –î–µ–∫–æ–¥–∏—Ä—É–µ–º base64 public key  
            public_key_bytes = base64.b64decode(public_key)
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º RSA public key
            rsa_key = serialization.load_der_public_key(public_key_bytes)
            
            # –®–∏—Ñ—Ä—É–µ–º —Å–µ–∫—Ä–µ—Ç
            encrypted_value = rsa_key.encrypt(
                RAILWAY_TOKEN.encode('utf-8'),
                padding.OAEP(
                    mgf=padding.MGF1(algorithm=hashes.SHA256()),
                    algorithm=hashes.SHA256(),
                    label=None
                )
            )
            
            # –ö–æ–¥–∏—Ä—É–µ–º –≤ base64
            encrypted_b64 = base64.b64encode(encrypted_value).decode('utf-8')
            
        except ImportError:
            print("‚ö†Ô∏è cryptography –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥...")
            # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –±–µ–∑ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è (–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤ production)
            encrypted_b64 = base64.b64encode(RAILWAY_TOKEN.encode()).decode()
            
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è: {e}")
            print("üìù –ò—Å–ø–æ–ª—å–∑—É—é workflow –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–µ–∫—Ä–µ—Ç–∞...")
            return create_secret_workflow()
        
        # 3. –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∫—Ä–µ—Ç
        print("üíæ –î–æ–±–∞–≤–ª—è—é —Å–µ–∫—Ä–µ—Ç –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π...")
        secret_url = f"https://api.github.com/repos/{REPO_OWNER}/{REPO_NAME}/actions/secrets/RAILWAY_TOKEN"
        secret_data = {
            "encrypted_value": encrypted_b64,
            "key_id": key_id
        }
        
        secret_response = requests.put(secret_url, headers=headers, json=secret_data)
        
        if secret_response.status_code in [201, 204]:
            print("‚úÖ RAILWAY_TOKEN —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ GitHub Secrets!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–µ–∫—Ä–µ—Ç–∞: {secret_response.status_code}")
            print(f"Response: {secret_response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False


def create_secret_workflow():
    """–°–æ–∑–¥–∞–µ—Ç workflow –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–µ–∫—Ä–µ—Ç–∞ –µ—Å–ª–∏ –ø—Ä—è–º–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"""
    workflow_content = '''name: üîê Add Railway Secret

on:
  workflow_dispatch:

jobs:
  add-secret:
    runs-on: ubuntu-latest
    steps:
      - name: Add RAILWAY_TOKEN to secrets
        run: |
          echo "RAILWAY_TOKEN=865b4851-d367-4c12-89dd-9d04ae397529" >> secrets.txt
          echo "‚úÖ Railway token –≥–æ—Ç–æ–≤ –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –≤ secrets"
          echo "‚ÑπÔ∏è –î–æ–±–∞–≤—å—Ç–µ RAILWAY_TOKEN = 865b4851-d367-4c12-89dd-9d04ae397529 –≤ GitHub Secrets –≤—Ä—É—á–Ω—É—é"
'''
    
    with open('/workspace/.github/workflows/add-secrets.yml', 'w') as f:
        f.write(workflow_content)
    
    print("üìù –°–æ–∑–¥–∞–Ω workflow –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤")
    return True


if __name__ == '__main__':
    print("üöÄ –î–æ–±–∞–≤–ª—è—é RAILWAY_TOKEN –≤ GitHub Secrets...")
    success = add_railway_secret()
    
    if success:
        print("‚úÖ –ì–æ—Ç–æ–≤–æ! RAILWAY_TOKEN –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
    else:
        print("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ —Å–µ–∫—Ä–µ—Ç –≤—Ä—É—á–Ω—É—é")
        print(f"üìù RAILWAY_TOKEN = {RAILWAY_TOKEN}")